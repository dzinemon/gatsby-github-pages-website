{"version":3,"file":"component---src-templates-lesson-tsx-07ef183a5acda7be1e87.js","mappings":"gNAsCA,MA6HaA,EAA+BC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAKE,EAAAA,cAAA,aAAQD,EAAKE,eAAeC,YAAYC,MAAM,YAAiB,EAEzH,UAzH+EC,IAAc,IAAb,KAAEL,GAAMK,EACtF,MAAM,eAAEH,EAAc,aAAEI,GAAiBN,GACnC,YAAEG,EAAW,KAAEI,GAASL,EACxBM,EATmBC,KACzB,MACMC,EAAQD,EAAIC,MADH,gEAEf,OAAQA,GAA6B,KAApBA,EAAM,GAAGC,OAAiBD,EAAM,GAAK,EAAE,EAMjCE,CAAkBT,EAAYU,aAAe,IAEpE,OACEZ,EAAAA,cAAA,QAAMa,UAAU,+BACdb,EAAAA,cAAA,OAAKa,UAAU,oBAAoB,aAAW,cAC5Cb,EAAAA,cAAA,MAAIa,UAAU,+BACZb,EAAAA,cAAA,UACEA,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAG,IAAIF,UAAU,iCAAgC,SAEzDb,EAAAA,cAAA,MAAIa,UAAU,qBACZb,EAAAA,cAAA,QAAMa,UAAU,QAAO,KACvBb,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAG,WAAWF,UAAU,iCAAgC,YAEhEb,EAAAA,cAAA,MAAIa,UAAU,qBACZb,EAAAA,cAAA,QAAMa,UAAU,QAAO,KACvBb,EAAAA,cAAA,QAAMa,UAAU,iBAAiBX,EAAYC,UAKnDH,EAAAA,cAAA,UAAQa,UAAU,QAChBb,EAAAA,cAAA,MAAIa,UAAU,2BAA2BX,EAAYC,OACrDH,EAAAA,cAAA,KAAGa,UAAU,8BAA8BX,EAAYc,aACvDhB,EAAAA,cAAA,OAAKa,UAAU,6BACZX,EAAYe,KAAKC,KAAKC,GACrBnB,EAAAA,cAACc,EAAAA,GAAI,CACHM,IAAKD,EACLJ,GAAI,SAASI,IACbN,UAAU,4DAETM,OAORZ,GACCP,EAAAA,cAAA,OAAKa,UAAU,QACbb,EAAAA,cAAA,MAAIa,UAAU,0BAAyB,iBACvCb,EAAAA,cAAA,OAAKa,UAAU,0BACbb,EAAAA,cAAA,UACEa,UAAU,mBACVQ,IAAK,iCAAiCd,IACtCJ,MAAOD,EAAYC,MACnBmB,MAAM,2FACNC,iBAAe,EACfC,YAAY,QAOnBtB,EAAYuB,WACXzB,EAAAA,cAAA,OAAKa,UAAU,QACbb,EAAAA,cAAA,MAAIa,UAAU,0BAAyB,UACvCb,EAAAA,cAAA,KACE0B,KAAMxB,EAAYuB,UAClBE,OAAO,SACPC,IAAI,sBACJf,UAAU,6EACX,4BAOLb,EAAAA,cAAA,OAAKa,UAAU,QACbb,EAAAA,cAAA,MAAIa,UAAU,0BAAyB,yBACvCb,EAAAA,cAAA,WACEa,UAAU,+BACVgB,wBAAyB,CAAEC,OAAQxB,MAGlC,C","sources":["webpack://gatsby-github-pages-website/./src/templates/lesson.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\ninterface LessonPageContext {\n  id: string;\n  relatedTools: string[];\n}\n\ninterface LessonPageData {\n  markdownRemark: {\n    frontmatter: {\n      title: string;\n      description: string;\n      tags: string[];\n      youtubeLink: string;\n      slideLink?: string;\n      date: string;\n    };\n    html: string;\n  };\n  relatedTools: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        tags: string[];\n        github: string;\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n}\n\n// Function to extract YouTube video ID\nconst getYoutubeEmbedId = (url: string): string => {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return (match && match[2].length === 11) ? match[2] : '';\n};\n\nconst LessonTemplate: React.FC<PageProps<LessonPageData, LessonPageContext>> = ({ data }) => {\n  const { markdownRemark, relatedTools } = data;\n  const { frontmatter, html } = markdownRemark;\n  const youtubeEmbedId = getYoutubeEmbedId(frontmatter.youtubeLink || '');\n\n  return (\n    <main className=\"container mx-auto px-4 py-8\">\n      <nav className=\"flex mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-1\">\n          <li>\n            <Link to=\"/\" className=\"text-blue-600 hover:underline\">Home</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <span className=\"mx-1\">/</span>\n            <Link to=\"/lessons\" className=\"text-blue-600 hover:underline\">Lessons</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <span className=\"mx-1\">/</span>\n            <span className=\"text-gray-500\">{frontmatter.title}</span>\n          </li>\n        </ol>\n      </nav>\n      \n      <header className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">{frontmatter.title}</h1>\n        <p className=\"text-lg text-gray-600 mb-4\">{frontmatter.description}</p>\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {frontmatter.tags.map((tag) => (\n            <Link \n              key={tag} \n              to={`/tags/${tag}`}\n              className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm\"\n            >\n              {tag}\n            </Link>\n          ))}\n        </div>\n      </header>\n\n      {/* YouTube Video */}\n      {youtubeEmbedId && (\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-bold mb-4\">Lecture Video</h2>\n          <div className=\"aspect-w-16 aspect-h-9\">\n            <iframe\n              className=\"w-full h-[450px]\"\n              src={`https://www.youtube.com/embed/${youtubeEmbedId}`}\n              title={frontmatter.title}\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              frameBorder=\"0\"\n            ></iframe>\n          </div>\n        </div>\n      )}\n\n      {/* Slides Link */}\n      {frontmatter.slideLink && (\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-bold mb-4\">Slides</h2>\n          <a \n            href={frontmatter.slideLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-block bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n          >\n            View or Download Slides\n          </a>\n        </div>\n      )}\n\n      {/* Lesson Content (including any quiz questions) */}\n      <div className=\"mb-8\">\n        <h2 className=\"text-xl font-bold mb-4\">Lesson Content & Quiz</h2>\n        <article \n          className=\"prose lg:prose-xl max-w-none\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query($id: String!, $relatedTools: [String!]) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        title\n        description\n        tags\n        youtubeLink\n        slideLink\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n    relatedTools: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/content/tools/\" }\n        frontmatter: { tags: { in: $relatedTools } }\n      }\n      limit: 6\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          tags\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC<LessonPageData> = ({ data }) => <title>{data.markdownRemark.frontmatter.title} | Lesson</title>;\n\nexport default LessonTemplate;"],"names":["Head","_ref2","data","React","markdownRemark","frontmatter","title","_ref","relatedTools","html","youtubeEmbedId","url","match","length","getYoutubeEmbedId","youtubeLink","className","Link","to","description","tags","map","tag","key","src","allow","allowFullScreen","frameBorder","slideLink","href","target","rel","dangerouslySetInnerHTML","__html"],"sourceRoot":""}