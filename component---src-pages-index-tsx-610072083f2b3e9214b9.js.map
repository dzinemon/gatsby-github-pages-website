{"version":3,"file":"component---src-pages-index-tsx-610072083f2b3e9214b9.js","mappings":"iNAqDA,MAyOaA,EAAeA,IAAMC,EAAAA,cAAA,aAAO,8BAEzC,UArOqDC,IAAc,IAAb,KAAEC,GAAMD,EAC5D,MAAM,MAAEE,EAAK,OAAEC,EAAM,QAAEC,EAAO,KAAEC,GAASJ,EAGnCK,EAAUD,EAAKE,MAClBC,MAAK,CAACC,EAAGC,IAAMA,EAAEC,WAAaF,EAAEE,aAChCC,MAAM,EAAG,GAEZ,OACEb,EAAAA,cAAA,QAAMc,UAAU,+BAEdd,EAAAA,cAAA,WAASc,UAAU,mCACjBd,EAAAA,cAAA,OAAKc,UAAU,iCACbd,EAAAA,cAAA,MAAIc,UAAU,2BAA0B,8BACxCd,EAAAA,cAAA,KAAGc,UAAU,8BAA6B,+IAI1Cd,EAAAA,cAAA,OAAKc,UAAU,uCACbd,EAAAA,cAACe,EAAAA,GAAI,CACHC,GAAG,SACHF,UAAU,4EACX,mBAGDd,EAAAA,cAACe,EAAAA,GAAI,CACHC,GAAG,UACHF,UAAU,8EACX,gBAGDd,EAAAA,cAACe,EAAAA,GAAI,CACHC,GAAG,WACHF,UAAU,gFACX,sBAQPd,EAAAA,cAAA,WAASc,UAAU,SACjBd,EAAAA,cAAA,OAAKc,UAAU,0CACbd,EAAAA,cAAA,MAAIc,UAAU,sBAAqB,qBACnCd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAG,SAASF,UAAU,iCAAgC,mBAE9Dd,EAAAA,cAAA,OAAKc,UAAU,yCACZX,EAAMc,MAAMC,KAAIC,GACfnB,EAAAA,cAAA,OAAKoB,IAAKD,EAAKE,GAAIP,UAAU,+CAC3Bd,EAAAA,cAAA,OAAKc,UAAU,OACbd,EAAAA,cAAA,MAAIc,UAAU,8BACZd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAIG,EAAKG,OAAOC,KAAMT,UAAU,iCACnCK,EAAKK,YAAYC,QAGtBzB,EAAAA,cAAA,KAAGc,UAAU,sBAAsBK,EAAKK,YAAYE,aACpD1B,EAAAA,cAAA,OAAKc,UAAU,wBACZK,EAAKK,YAAYlB,KAAKO,MAAM,EAAG,GAAGK,KAAIS,GACrC3B,EAAAA,cAACe,EAAAA,GAAI,CACHK,IAAKO,EACLX,GAAI,SAASW,IACbb,UAAU,4DAETa,YAWjB3B,EAAAA,cAAA,WAASc,UAAU,SACjBd,EAAAA,cAAA,OAAKc,UAAU,0CACbd,EAAAA,cAAA,MAAIc,UAAU,sBAAqB,sBACnCd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAG,UAAUF,UAAU,iCAAgC,oBAE/Dd,EAAAA,cAAA,OAAKc,UAAU,yCACZV,EAAOa,MAAMC,KAAIU,IAChB,MAAMC,EAxFSC,KACzB,MACMC,EAAQD,EAAIC,MADH,gEAEf,OAAQA,GAA6B,KAApBA,EAAM,GAAGC,OAAiBD,EAAM,GAAK,EAAE,EAqFvBE,CAAkBL,EAAMJ,YAAYU,aAC3D,OACElC,EAAAA,cAAA,OAAKoB,IAAKQ,EAAMP,GAAIP,UAAU,+CAC3Be,GACC7B,EAAAA,cAAA,OAAKc,UAAU,0BACbd,EAAAA,cAAA,UACEc,UAAU,cACVqB,IAAK,iCAAiCN,IACtCJ,MAAOG,EAAMJ,YAAYC,MACzBW,MAAM,2FACNC,iBAAe,EACfC,YAAY,OAIlBtC,EAAAA,cAAA,OAAKc,UAAU,OACbd,EAAAA,cAAA,MAAIc,UAAU,yBACZd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAIY,EAAMN,OAAOC,KAAMT,UAAU,iCACpCc,EAAMJ,YAAYC,SAIrB,MAOdzB,EAAAA,cAAA,WAASc,UAAU,SACjBd,EAAAA,cAAA,OAAKc,UAAU,0CACbd,EAAAA,cAAA,MAAIc,UAAU,sBAAqB,uBACnCd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAG,WAAWF,UAAU,iCAAgC,qBAEhEd,EAAAA,cAAA,OAAKc,UAAU,yCACZT,EAAQY,MAAMC,KAAIqB,GACjBvC,EAAAA,cAAA,OAAKoB,IAAKmB,EAAOlB,GAAIP,UAAU,mDAC7Bd,EAAAA,cAAA,MAAIc,UAAU,8BACZd,EAAAA,cAACe,EAAAA,GAAI,CAACC,GAAIuB,EAAOjB,OAAOC,KAAMT,UAAU,iCACrCyB,EAAOf,YAAYC,QAGxBzB,EAAAA,cAAA,KAAGc,UAAU,iBAAiByB,EAAOf,YAAYE,kBAOzD1B,EAAAA,cAAA,WAASc,UAAU,SACjBd,EAAAA,cAAA,MAAIc,UAAU,2BAA0B,kBACxCd,EAAAA,cAAA,OAAKc,UAAU,wBACZP,EAAQW,KAAIS,GACX3B,EAAAA,cAACe,EAAAA,GAAI,CACHK,IAAKO,EAAIa,WACTxB,GAAI,SAASW,EAAIa,aACjB1B,UAAU,iFAETa,EAAIa,WAAW,KAAGb,EAAIf,WAAW,SAO1CZ,EAAAA,cAAA,WAASc,UAAU,yCACjBd,EAAAA,cAAA,MAAIc,UAAU,2BAA0B,wBACxCd,EAAAA,cAAA,KAAGc,UAAU,8BAA6B,qHAI1Cd,EAAAA,cAAA,KACEyC,KAAK,4EACLC,OAAO,SACPC,IAAI,sBACJ7B,UAAU,yFACX,yBAIE,C","sources":["webpack://gatsby-github-pages-website/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport \"../styles/global.css\";\n\ninterface HomePageData {\n  tools: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        tags: string[];\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n  videos: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        youtubeLink: string;\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n  lessons: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n  tags: {\n    group: {\n      fieldValue: string;\n      totalCount: number;\n    }[];\n  };\n}\n\n// Function to extract YouTube video ID from YouTube URL\nconst getYoutubeEmbedId = (url: string): string => {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return (match && match[2].length === 11) ? match[2] : '';\n};\n\nconst IndexPage: React.FC<PageProps<HomePageData>> = ({ data }) => {\n  const { tools, videos, lessons, tags } = data;\n  \n  // Get top tags (most used)\n  const topTags = tags.group\n    .sort((a, b) => b.totalCount - a.totalCount)\n    .slice(0, 8);\n  \n  return (\n    <main className=\"container mx-auto px-4 py-8\">\n      {/* Hero Section */}\n      <section className=\"bg-blue-50 rounded-xl p-8 mb-12\">\n        <div className=\"max-w-3xl mx-auto text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">AI Education Resources Hub</h1>\n          <p className=\"text-lg text-gray-700 mb-8\">\n            A curated collection of AI tools, educational videos, and lesson plans \n            to help educators leverage artificial intelligence in the classroom.\n          </p>\n          <div className=\"flex flex-wrap justify-center gap-4\">\n            <Link \n              to=\"/tools\" \n              className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition\"\n            >\n              Browse AI Tools\n            </Link>\n            <Link \n              to=\"/videos\" \n              className=\"bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition\"\n            >\n              Watch Videos\n            </Link>\n            <Link \n              to=\"/lessons\" \n              className=\"bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition\"\n            >\n              Explore Lessons\n            </Link>\n          </div>\n        </div>\n      </section>\n      \n      {/* Featured Tools Section */}\n      <section className=\"mb-12\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold\">Featured AI Tools</h2>\n          <Link to=\"/tools\" className=\"text-blue-600 hover:underline\">View all tools</Link>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {tools.nodes.map(tool => (\n            <div key={tool.id} className=\"border rounded-lg overflow-hidden shadow-md\">\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold mb-2\">\n                  <Link to={tool.fields.slug} className=\"text-blue-600 hover:underline\">\n                    {tool.frontmatter.title}\n                  </Link>\n                </h3>\n                <p className=\"text-gray-600 mb-4\">{tool.frontmatter.description}</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  {tool.frontmatter.tags.slice(0, 3).map(tag => (\n                    <Link \n                      key={tag} \n                      to={`/tags/${tag}`}\n                      className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs\"\n                    >\n                      {tag}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n      \n      {/* Featured Videos Section */}\n      <section className=\"mb-12\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold\">Educational Videos</h2>\n          <Link to=\"/videos\" className=\"text-blue-600 hover:underline\">View all videos</Link>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {videos.nodes.map(video => {\n            const youtubeEmbedId = getYoutubeEmbedId(video.frontmatter.youtubeLink);\n            return (\n              <div key={video.id} className=\"border rounded-lg overflow-hidden shadow-md\">\n                {youtubeEmbedId && (\n                  <div className=\"aspect-w-16 aspect-h-9\">\n                    <iframe\n                      className=\"w-full h-48\"\n                      src={`https://www.youtube.com/embed/${youtubeEmbedId}`}\n                      title={video.frontmatter.title}\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen\n                      frameBorder=\"0\"\n                    ></iframe>\n                  </div>\n                )}\n                <div className=\"p-4\">\n                  <h3 className=\"text-lg font-semibold\">\n                    <Link to={video.fields.slug} className=\"text-blue-600 hover:underline\">\n                      {video.frontmatter.title}\n                    </Link>\n                  </h3>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n      \n      {/* Latest Lessons Section */}\n      <section className=\"mb-12\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl font-bold\">AI-Enhanced Lessons</h2>\n          <Link to=\"/lessons\" className=\"text-blue-600 hover:underline\">View all lessons</Link>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {lessons.nodes.map(lesson => (\n            <div key={lesson.id} className=\"border rounded-lg overflow-hidden shadow-md p-6\">\n              <h3 className=\"text-xl font-semibold mb-2\">\n                <Link to={lesson.fields.slug} className=\"text-blue-600 hover:underline\">\n                  {lesson.frontmatter.title}\n                </Link>\n              </h3>\n              <p className=\"text-gray-600\">{lesson.frontmatter.description}</p>\n            </div>\n          ))}\n        </div>\n      </section>\n      \n      {/* Browse by Topics Section */}\n      <section className=\"mb-12\">\n        <h2 className=\"text-2xl font-bold mb-6\">Popular Topics</h2>\n        <div className=\"flex flex-wrap gap-3\">\n          {topTags.map(tag => (\n            <Link \n              key={tag.fieldValue}\n              to={`/tags/${tag.fieldValue}`}\n              className=\"bg-gray-100 hover:bg-gray-200 text-gray-800 px-4 py-2 rounded-full transition\"\n            >\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          ))}\n        </div>\n      </section>\n      \n      {/* CTA Section */}\n      <section className=\"bg-blue-50 rounded-xl p-8 text-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">Are You an Educator?</h2>\n        <p className=\"text-lg text-gray-700 mb-6\">\n          Submit your own AI tools, videos, or lesson plans to help other educators \n          leverage AI in their teaching practice.\n        </p>\n        <a \n          href=\"https://github.com/dzinemon/gatsby-github-pages-website/issues/new/choose\" \n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"inline-block bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition\"\n        >\n          Submit Your Resource\n        </a>\n      </section>\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query {\n    tools: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/tools/\" } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 3\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          tags\n        }\n      }\n    }\n    videos: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/videos/\" } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 2\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          youtubeLink\n        }\n      }\n    }\n    lessons: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/lessons/\" } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 2\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n        }\n      }\n    }\n    tags: allMarkdownRemark {\n      group(field: {frontmatter: {tags: SELECT}}) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <title>AI Education Resources Hub</title>;\n\nexport default IndexPage;\n"],"names":["Head","React","_ref","data","tools","videos","lessons","tags","topTags","group","sort","a","b","totalCount","slice","className","Link","to","nodes","map","tool","key","id","fields","slug","frontmatter","title","description","tag","video","youtubeEmbedId","url","match","length","getYoutubeEmbedId","youtubeLink","src","allow","allowFullScreen","frameBorder","lesson","fieldValue","href","target","rel"],"sourceRoot":""}