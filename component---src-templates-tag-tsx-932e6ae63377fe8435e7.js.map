{"version":3,"file":"component---src-templates-tag-tsx-932e6ae63377fe8435e7.js","mappings":"iNAuCA,MAiJaA,EAAmCC,IAAA,IAAC,YAAEC,GAAaD,EAAA,OAAKE,EAAAA,cAAA,aAAO,mBAAiBD,EAAYE,IAAY,EAErH,UAnJsEC,IAA2B,IAA1B,KAAEC,EAAI,YAAEJ,GAAaG,EAC1F,MAAM,IAAED,GAAQF,GACV,MAAEK,EAAK,OAAEC,GAAWF,EAE1B,OACEH,EAAAA,cAAA,QAAMM,UAAU,+BACdN,EAAAA,cAAA,OAAKM,UAAU,oBAAoB,aAAW,cAC5CN,EAAAA,cAAA,MAAIM,UAAU,+BACZN,EAAAA,cAAA,UACEA,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAG,IAAIF,UAAU,iCAAgC,SAEzDN,EAAAA,cAAA,MAAIM,UAAU,qBACZN,EAAAA,cAAA,QAAMM,UAAU,QAAO,KACvBN,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAG,QAAQF,UAAU,iCAAgC,SAE7DN,EAAAA,cAAA,MAAIM,UAAU,qBACZN,EAAAA,cAAA,QAAMM,UAAU,QAAO,KACvBN,EAAAA,cAAA,QAAMM,UAAU,iBAAiBL,MAIvCD,EAAAA,cAAA,MAAIM,UAAU,2BAA0B,wBAAqBN,EAAAA,cAAA,QAAMM,UAAU,iBAAiBL,IAG9FD,EAAAA,cAAA,WAASM,UAAU,SACjBN,EAAAA,cAAA,MAAIM,UAAU,2BAA0B,SACvCF,EAAMK,MAAMC,OAAS,EACpBV,EAAAA,cAAA,OAAKM,UAAU,wDACZF,EAAMK,MAAME,KAAKC,GAChBZ,EAAAA,cAAA,OAAKa,IAAKD,EAAKE,GAAIR,UAAU,+CAC3BN,EAAAA,cAAA,OAAKM,UAAU,OACbN,EAAAA,cAAA,MAAIM,UAAU,8BACZN,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAII,EAAKG,OAAOC,KAAMV,UAAU,iCACnCM,EAAKK,YAAYC,QAGtBlB,EAAAA,cAAA,KAAGM,UAAU,sBAAsBM,EAAKK,YAAYE,aACpDnB,EAAAA,cAAA,OAAKM,UAAU,6BACZM,EAAKK,YAAYG,KAAKT,KAAKV,GAC1BD,EAAAA,cAACO,EAAAA,GAAI,CACHM,IAAKZ,EACLO,GAAI,SAASP,IACbK,UAAU,4DAETL,WASfD,EAAAA,cAAA,SAAG,kCAKPA,EAAAA,cAAA,WAASM,UAAU,SACjBN,EAAAA,cAAA,MAAIM,UAAU,2BAA0B,UACvCD,EAAOI,MAAMC,OAAS,EACrBV,EAAAA,cAAA,OAAKM,UAAU,wDACZD,EAAOI,MAAME,KAAKU,GACjBrB,EAAAA,cAAA,OAAKa,IAAKQ,EAAMP,GAAIR,UAAU,+CAC5BN,EAAAA,cAAA,OAAKM,UAAU,OACbN,EAAAA,cAAA,MAAIM,UAAU,8BACZN,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAIa,EAAMN,OAAOC,KAAMV,UAAU,iCACpCe,EAAMJ,YAAYC,QAGvBlB,EAAAA,cAAA,KAAGM,UAAU,sBAAsBe,EAAMJ,YAAYE,aACrDnB,EAAAA,cAAA,OAAKM,UAAU,6BACZe,EAAMJ,YAAYG,KAAKT,KAAKV,GAC3BD,EAAAA,cAACO,EAAAA,GAAI,CACHM,IAAKZ,EACLO,GAAI,SAASP,IACbK,UAAU,4DAETL,WASfD,EAAAA,cAAA,SAAG,mCAIPA,EAAAA,cAAA,UAAQM,UAAU,QAChBN,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAG,QAAQF,UAAU,iCAAgC,eAIxD,C","sources":["webpack://gatsby-github-pages-website/./src/templates/tag.tsx"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\ninterface TagPageContext {\n  tag: string;\n}\n\ninterface TagPageData {\n  tools: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        tags: string[];\n        date: string;\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n  videos: {\n    nodes: {\n      id: string;\n      frontmatter: {\n        title: string;\n        description: string;\n        tags: string[];\n        date: string;\n      };\n      fields: {\n        slug: string;\n      };\n    }[];\n  };\n}\n\nconst TagTemplate: React.FC<PageProps<TagPageData, TagPageContext>> = ({ data, pageContext }) => {\n  const { tag } = pageContext;\n  const { tools, videos } = data;\n\n  return (\n    <main className=\"container mx-auto px-4 py-8\">\n      <nav className=\"flex mb-4 text-sm\" aria-label=\"Breadcrumb\">\n        <ol className=\"flex items-center space-x-1\">\n          <li>\n            <Link to=\"/\" className=\"text-blue-600 hover:underline\">Home</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <span className=\"mx-1\">/</span>\n            <Link to=\"/tags\" className=\"text-blue-600 hover:underline\">Tags</Link>\n          </li>\n          <li className=\"flex items-center\">\n            <span className=\"mx-1\">/</span>\n            <span className=\"text-gray-500\">{tag}</span>\n          </li>\n        </ol>\n      </nav>\n      <h1 className=\"text-3xl font-bold mb-8\">Content tagged with: <span className=\"text-blue-600\">{tag}</span></h1>\n      \n      {/* Tools Section */}\n      <section className=\"mb-12\">\n        <h2 className=\"text-2xl font-bold mb-4\">Tools</h2>\n        {tools.nodes.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {tools.nodes.map((tool) => (\n              <div key={tool.id} className=\"border rounded-lg overflow-hidden shadow-md\">\n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold mb-2\">\n                    <Link to={tool.fields.slug} className=\"text-blue-600 hover:underline\">\n                      {tool.frontmatter.title}\n                    </Link>\n                  </h3>\n                  <p className=\"text-gray-600 mb-4\">{tool.frontmatter.description}</p>\n                  <div className=\"flex flex-wrap gap-2 mt-4\">\n                    {tool.frontmatter.tags.map((tag) => (\n                      <Link \n                        key={tag} \n                        to={`/tags/${tag}`}\n                        className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs\"\n                      >\n                        {tag}\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No tools found with this tag.</p>\n        )}\n      </section>\n      \n      {/* Videos Section */}\n      <section className=\"mb-12\">\n        <h2 className=\"text-2xl font-bold mb-4\">Videos</h2>\n        {videos.nodes.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {videos.nodes.map((video) => (\n              <div key={video.id} className=\"border rounded-lg overflow-hidden shadow-md\">\n                <div className=\"p-6\">\n                  <h3 className=\"text-xl font-semibold mb-2\">\n                    <Link to={video.fields.slug} className=\"text-blue-600 hover:underline\">\n                      {video.frontmatter.title}\n                    </Link>\n                  </h3>\n                  <p className=\"text-gray-600 mb-4\">{video.frontmatter.description}</p>\n                  <div className=\"flex flex-wrap gap-2 mt-4\">\n                    {video.frontmatter.tags.map((tag) => (\n                      <Link \n                        key={tag} \n                        to={`/tags/${tag}`}\n                        className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs\"\n                      >\n                        {tag}\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p>No videos found with this tag.</p>\n        )}\n      </section>\n      \n      <footer className=\"mt-8\">\n        <Link to=\"/tags\" className=\"text-blue-600 hover:underline\">\n          &larr; All Tags\n        </Link>\n      </footer>\n    </main>\n  );\n};\n\nexport const query = graphql`\n  query($tag: String!) {\n    tools: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/content/tools/\" }\n        frontmatter: { tags: { in: [$tag] } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n    }\n    videos: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/content/videos/\" }\n        frontmatter: { tags: { in: [$tag] } }\n      }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          description\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC<{}, TagPageContext> = ({ pageContext }) => <title>Content Tagged: {pageContext.tag}</title>;\n\nexport default TagTemplate;"],"names":["Head","_ref2","pageContext","React","tag","_ref","data","tools","videos","className","Link","to","nodes","length","map","tool","key","id","fields","slug","frontmatter","title","description","tags","video"],"sourceRoot":""}